# -*- mode: ruby -*-
# vi: set ft=ruby :

USER_CONFIG_FILE = File.join(File.dirname(__FILE__), "bootstrap-user.sh")
ENV_FILE = File.join(File.dirname(__FILE__), ".env")
PRIVATE_IP_FILE = File.join(File.dirname(__FILE__), "private-ip")
private_ip = "10.4.17.4"

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # why are we seeing these messages twice?
  unless File.exist?(ENV_FILE)
    abort "You must create a .env file. See .env.example."
  end
  unless File.exist?(USER_CONFIG_FILE)
    abort "You must create a bootstrap-user.sh file. See bootstrap-user-example.sh."
  end
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.

  # original standard ubuntu 14.04
  # config.vm.box = "ubuntu/trusty64"

  # config.vm.define "a16"
  # heroku's box
  config.vm.box = "trusty"
  config.vm.box_url = "https://cloud-images.ubuntu.com/vagrant/trusty/current/trusty-server-cloudimg-amd64-vagrant-disk1.box"

config.vm.define :"webrtc"

  #config.vm.define :PumpkinVotingSystem do |t|
  #end

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 3000, host: 8080
  config.vm.network "forwarded_port", guest: 27017, host: 27018

  # original network
  # config.vm.network :forwarded_port, guest: 80, host: 4567

  # heroku's network config
  # private network spaces: 10.0.0.0 - 10.255.255.255
  # 172.16.0.0 - 172.31.255.255
  # 192.168.0.0 - 192.168.255.255
  # except, don't end with .1
  if File.file?(PRIVATE_IP_FILE)
    private_ip = File.read(PRIVATE_IP_FILE)
  end
  config.vm.network "private_network", ip: private_ip
  config.ssh.forward_agent = true
  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # config.vm.synced_folder "storage", "/vagrant/storage", owner: 'vagrant', group: 'www-data', mount_options: ['dmode=775', 'fmode=775']
  config.vm.synced_folder "storage", "/vagrant/storage", owner: 'vagrant', group: 'www-data', mount_options: ['dmode=775', 'fmode=775']
  # config.vm.synced_folder "bootstrap/cache", "/vagrant/bootstrap/cache", owner: 'vagrant', group: 'www-data', mount_options: ['dmode=775', 'fmode=775']
  config.vm.synced_folder "tmp/log", "/tmp/log", create: true

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
    vb.memory = "2048"
    # resolve networking issues
    # via https://github.com/mitchellh/vagrant/issues/2786
    vb.customize ['modifyvm', :id, '--natdnshostresolver1', 'on']
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end
  
  config.vm.provision "fix-no-tty", type: "shell" do |s|
    s.privileged = false
    s.inline = "sudo sed -i '/tty/!s/mesg n/tty -s \\&\\& mesg n/' /root/.profile"
  end
  # https://github.com/DSpace/vagrant-dspace/blob/master/Vagrantfile 
  # http://serverfault.com/questions/491343/how-can-i-move-my-deploy-key-into-vagrant

  config.vm.provision "file", source: "~/.gitconfig", destination: ".gitconfig"

  config.vm.provision "shell", path: "provisioning/setup.sh", privileged: false
  config.vm.provision "shell", path: "provisioning/apache/init.sh"
  config.vm.provision "shell", path: "provisioning/php.sh"
  config.vm.provision "shell", path: "provisioning/postgres.sh"
  config.vm.provision "shell", path: "provisioning/redis/init.sh"
  # config.vm.provision "shell", path: "provisioning/compass.sh", privileged: false
  config.vm.provision "shell", path: "provisioning/node.sh"

  # if File.file?("#{Dir.home}/.ssh/id_rsa")
  #   ssh_private_key = File.read("#{Dir.home}/.ssh/id_rsa")
  #   ssh_pub_key = File.readlines("#{Dir.home}/.ssh/id_rsa.pub").first.strip
  #   ssh_key_name = "id_rsa"
  #   config.vm.provision "shell", inline: "echo -e '#{File.read("#{Dir.home}/.ssh/id_rsa")}' > '/home/vagrant/.ssh/id_rsa'"
  # else
  #   ssh_private_key = File.read("#{Dir.home}/.ssh/id_dsa")
  #   ssh_pub_key = File.readlines("#{Dir.home}/.ssh/id_dsa.pub").first.strip
  #   ssh_key_name = "id_dsa"
  #   config.vm.provision "shell", inline: "echo -e '#{File.read("#{Dir.home}/.ssh/id_dsa")}' > '/home/vagrant/.ssh/id_dsa'"
  # end
 config.vm.provision :shell, path: "bootstrap-user.sh"
 config.vm.provision "shell", path: "provisioning/laravel.sh", privileged: false
  config.vm.post_up_message = "URL: http://" + private_ip + " (create or modify `private-ip` file to change)\nvagrant ssh to connect"
end
